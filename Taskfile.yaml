version: '3'

tasks:
  #### Default ####
  default:
    desc: List all tasks
    cmds:
      - task -l
    silent: true

  #### Utility ####
  setup:
    desc: Run all setup tasks
    cmds:
      - task setup:mod
      - task setup:lint
      - task setup:test
    silent: true

  setup:mod:
    desc: Download and tidy Go modules
    cmds:
      - go mod download
      - go mod tidy
    silent: true

  setup:lint:
    desc: Install necessary linting tools
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    silent: true

  setup:test:
    desc: Install necessary testing tools
    cmds:
      - go install gotest.tools/gotestsum@latest
      - go install github.com/axw/gocov/gocov@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest
    silent: true

  #### Lint ####
  lint:
    desc: Run golangci-lint
    cmd: golangci-lint run ./...
    silent: true

  #### Test ####
  test:
    desc: Run all tests for all packages
    cmds:
      - printf "---------- template ----------------------\n\n" && task test:template && printf "\n\n"
      - printf "---------- markdown ----------------------\n\n" && task test:markdown && printf "\n\n"
      - printf "---------- cli ---------------------------\n\n" && task test:cli && printf "\n\n"
    silent: true

  test:cli:
    desc: Run tests for cli package
    dir: ./internal/cli
    cmd: gotestsum -f testname
    silent: true

  test:markdown:
    desc: Run tests for markdown package
    dir: ./internal/markdown
    cmd: gotestsum -f testname
    silent: true

  test:template:
    desc: Run tests for template package
    dir: ./internal/template
    cmd: gotestsum -f testname
    silent: true

  coverage:
    desc: Generate coverage information for all packages
    cmd: gocov test ./... | gocov report
    silent: true

  ### Benchmark ###
  benchmark:
    desc: Run benchmarks for template package
    dir: ./internal/template
    cmd: go test -bench=. -benchmem -count 4
    silent: true

  #### Build ####
  build:
    desc: Build binary
    cmds:
      - go build -o ./bin/bicep-docs ./cmd/bicep-docs/main.go
    silent: true

  #### Clean ####
  clean:
    desc: Clean binaries
    cmd: rm ./bin/bicep-docs 2> /dev/null
    silent: true
    ignore_error: true
