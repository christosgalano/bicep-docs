name: Continuous Integration

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Install Task
      run: go install github.com/go-task/task/v3/cmd/task@latest

    - name: Install Go tools
      run: task setup:lint

    - name: Lint
      run: task lint

  test:
    name: test-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    permissions:
      contents: write
      issues: read
      checks: write
      pull-requests: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Install Task
      run: go install github.com/go-task/task/v3/cmd/task@latest

    - name: Install Go tools
      run: task setup:test

    - name: Test
      id: test
      run: task test:junit
      continue-on-error: true

    - name: Code coverage
      id: coverage
      run: task coverage:junit
      continue-on-error: true

    - name: Fail if tests failed
      if: steps.test.outcome == 'failure' || steps.coverage.outcome == 'failure'
      run: |
        echo "Tests failed ..."
        exit 1

    - name: Benchmark
      run: task benchmark

    - name: Security
      run: task security

  update-readme:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
    - name: Check if README changed
      if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      id: readme
      run: |
        ./.github/scripts/coverage-badge.sh
        git config --local user.name 'github-actions[bot]'
        git config --local user.email 'github-actions[bot]@users.noreply.github.com'
        git diff --quiet --exit-code -- README.md || UPDATED=true
        if [[ "$UPDATED" == "true" ]]; then
          git add README.md
          git commit -m "Update code coverage badge"
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Push updated README
      if: steps.readme.outputs.changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.ref }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
